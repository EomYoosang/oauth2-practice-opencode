spring:
  application:
    name: oauth2
  profiles:
    default: local
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    cors:
      allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:http://localhost:3000}
      allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
  data:
    redis:
      client-type: lettuce
      timeout: ${REDIS_TIMEOUT:2000}
  jackson:
    default-property-inclusion: non_null
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:10}
      minimum-idle: ${HIKARI_MIN_IDLE:1}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:30000}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    root: INFO
    org.springframework.security: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,info

jwt:
  secret: ${JWT_SECRET:dev-secret-key-should-be-long-enough-123456}
  issuer: ${JWT_ISSUER:oauth2-practice}
  access-token:
    ttl-seconds: ${JWT_ACCESS_TTL:900}
  refresh-token:
    ttl-seconds: ${JWT_REFRESH_TTL:1209600}
    key-prefix: "${JWT_REFRESH_KEY_PREFIX:auth:rt:}"
    device-registry-prefix: "${JWT_DEVICE_REGISTRY_PREFIX:auth:dev:}"

auth:
  email-verification:
    ttl-seconds: ${AUTH_EMAIL_VERIFICATION_TTL:1800}
    token-byte-length: ${AUTH_EMAIL_VERIFICATION_TOKEN_BYTES:32}
    key-prefix: ${AUTH_EMAIL_VERIFICATION_KEY_PREFIX:auth:ev:}

security:
  password:
    bcrypt-strength: ${SECURITY_BCRYPT_STRENGTH:12}
    policy:
      minimum-length: ${SECURITY_PASSWORD_MIN_LENGTH:12}
      require-uppercase: true
      require-lowercase: true
      require-digit: true
      require-special: true
      special-characters: "!@#$%^&*()_+-=[]{}|;:'\",.<>/?"
    compromised:
      enabled: ${SECURITY_PASSWORD_COMPROMISED_ENABLED:false}
      provider: ${SECURITY_PASSWORD_COMPROMISED_PROVIDER:none}
      api-url: ${SECURITY_PASSWORD_COMPROMISED_API_URL:}
